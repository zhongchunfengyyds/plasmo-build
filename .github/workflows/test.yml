name: Release Extension

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version (v1.0.0)'
        required: true
        type: string
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 1. Check out the code
      - uses: actions/checkout@v4
      
      # 2. Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      # 3. Set up pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          
      # 4. Get pnpm store directory
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        working-directory: ./hal/extension

      # 5. Set up pnpm cache
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('hal/extension/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
          
      # 6. Install dependencies
      - name: Install dependencies
        working-directory: ./hal/extension
        run: pnpm install --no-frozen-lockfile
        
      # 7. Build the extension
      - name: Build extension
        working-directory: ./hal/extension
        run: pnpm build
        
      # 8. Package Chrome Extension
      - name: Package Chrome Extension
        working-directory: ./hal/extension
        run: |
          echo "Creating Chrome extension package..."
          cd build/chrome-mv3-prod
          zip -r ../../chrome-extension.zip *
          cd ../..
          
      # 9. Package Firefox Extension
      - name: Package Firefox Extension
        working-directory: ./hal/extension
        run: |
          echo "Creating Firefox extension package..."
          cd build/firefox-mv3-prod || cd build/chrome-mv3-prod
          zip -r ../../firefox-extension.zip *
          cd ../..
          
      # 10. List packaged files
      - name: List packages
        working-directory: ./hal/extension
        run: |
          echo "Checking created packages:"
          ls -la *.zip
          
      # 11. Create Release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            hal/extension/chrome-extension.zip
            hal/extension/firefox-extension.zip
          tag_name: ${{ inputs.version }}
          name: Release ${{ inputs.version }}
          body: |
            # Plasmo Extension Release ${{ inputs.version }}
            
            ## Chrome Extension
            - Download the `chrome-extension.zip` file
            - Go to `chrome://extensions/`
            - Enable "Developer mode"
            - Drag and drop the zip file into the extensions page
            
            ## Firefox Extension
            - Download the `firefox-extension.zip` file
            - Go to `about:debugging#/runtime/this-firefox`
            - Click "Load Temporary Add-on"
            - Select the downloaded zip file
            
            This release was automatically generated by GitHub Actions.
          draft: false
          prerelease: false
          generate_release_notes: true
